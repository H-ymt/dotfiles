{
  "[astro]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascriptreact]": {},
  "[php]": {
    "editor.defaultFormatter": "bmewburn.vscode-intelephense-client"
  },
  "accessibility.dimUnfocused.opacity": 0.45,
  "animations.Install-Method": "Apc Customize UI++",
  "codeium.enableCodeLens": false,
  "codeium.enableConfig": {
    "*": true,
    "postcss": true
  },
  "css.format.spaceAroundSelectorSeparator": true,
  "diffEditor.hideUnchangedRegions.enabled": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.accessibilitySupport": "off",
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit",
    "source.organizeImports": "never"
  },
  "editor.cursorBlinking": "solid",
  "editor.cursorWidth": 1,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "JetBrains Mono NL, JetBrainsMono Nerd Font, Hack Nerd Font, Plemol JP",
  "editor.fontSize": 15,
  "editor.fontWeight": "400",
  "editor.formatOnSave": true,
  "editor.formatOnType": true,
  "editor.guides.indentation": false,
  "editor.inlayHints.fontSize": 14,
  "editor.largeFileOptimizations": false,
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.mouseWheelZoom": true,
  "editor.padding.bottom": 8,
  "editor.padding.top": 14,
  "editor.scrollbar.vertical": "visible",
  "editor.scrollbar.verticalScrollbarSize": 1,
  "editor.stickyScroll.enabled": false,
  "editor.tabCompletion": "on",
  "editor.tabSize": 2,
  "editor.unicodeHighlight.ambiguousCharacters": false,
  "editor.unicodeHighlight.invisibleCharacters": false,
  "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>?",
  "editor.wordWrap": "on",
  "emmet.includeLanguages": {
    "css": "css",
    "javascript": "javascriptreact",
    "postcss": "css",
    "scss": "scss"
  },
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  "explorer.compactFolders": false,
  "files.associations": {
    "*.ejs": "html",
    "*.html.ejs": "html",
    "*.html.erb": "html",
    "*.twig": "php",
    "*html": "html"
  },
  "files.autoGuessEncoding": true,
  "files.autoSave": "onFocusChange",
  "frosted-glass-theme.fakeMica.enabled": true,
  "git-graph.commitDetailsView.autoCenter": false,
  "git-graph.commitDetailsView.fileView.fileTree.compactFolders": false,
  "git.openRepositoryInParentFolders": "never",
  "github.copilot.chat.commitMessageGeneration.instructions": [
    {
      "text": "Generate a commit message in the Conventional Commits format: type(scope): description. Use one of these types: feat, fix, docs, style, refactor, perf, test, build, ci, chore. For the scope, use the primary component or file being changed. The description should be concise and use imperative present tense. Do not use periods at the end. Examples: 'feat(user): Add password reset functionality', 'fix(api): Resolve issue with authentication timeout', 'docs(readme): Update installation instructions'"
    }
  ],
  "github.copilot.chat.preFilledText": "Create a concise conventional commit message for these changes.",
  "githubPullRequests.pullBranch": "never",
  "githubPullRequests.pullRequestDescription": "Copilot",
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.currentLine.scrollable": false,
  "gutterpreview.imagePreviewMaxHeight": 300,
  "gutterpreview.imagePreviewMaxWidth": 300,
  "hediet.vscode-drawio.resizeImages": null,
  "intelephense.environment.phpVersion": "8.2.17",
  "intelephense.stubs": [
    "apache",
    "bcmath",
    "bz2",
    "calendar",
    "com_dotnet",
    "Core",
    "ctype",
    "curl",
    "date",
    "dba",
    "dom",
    "enchant",
    "exif",
    "FFI",
    "fileinfo",
    "filter",
    "fpm",
    "ftp",
    "gd",
    "gettext",
    "gmp",
    "hash",
    "iconv",
    "imap",
    "intl",
    "json",
    "ldap",
    "libxml",
    "mbstring",
    "meta",
    "mysqli",
    "oci8",
    "odbc",
    "openssl",
    "pcntl",
    "pcre",
    "PDO",
    "pdo_ibm",
    "pdo_mysql",
    "pdo_pgsql",
    "pdo_sqlite",
    "pgsql",
    "Phar",
    "posix",
    "pspell",
    "random",
    "readline",
    "Reflection",
    "session",
    "shmop",
    "SimpleXML",
    "snmp",
    "soap",
    "sockets",
    "sodium",
    "SPL",
    "sqlite3",
    "standard",
    "superglobals",
    "sysvmsg",
    "sysvsem",
    "sysvshm",
    "tidy",
    "tokenizer",
    "xml",
    "xmlreader",
    "xmlrpc",
    "xmlwriter",
    "xsl",
    "Zend OPcache",
    "zip",
    "zlib",
    "wordpress"
  ],
  "markdown.extension.print.theme": "dark",
  "markuplint.debug": true,
  "markuplint.defaultConfig": {
    "extends": ["markuplint:recommended"],
    "rules": {
      "required-h1": false
    }
  },
  "php.validate.executablePath": "/opt/homebrew/opt/php@8.2/bin/php",
  "pieces.OS.launchOnStartup": "Yes",
  "pieces.cloudCapabilities": "Blended",
  "pieces.telemetry": true,
  "polacode.transparentBackground": true,
  "prettier.documentSelectors": ["**/*.astro"],
  "prettier.printWidth": 95,
  "prettier.semi": true,
  "prettier.vueIndentScriptAndStyle": true,
  "security.promptForLocalFileProtocolHandling": false,
  "security.workspace.trust.enabled": false,
  "terminal.external.osxExec": "Warp.app",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.cursorStyleInactive": "none",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.enableImages": true,
  "terminal.integrated.env.osx": {
    "CW_NEW_SESSION": "1",
    "FIG_NEW_SESSION": "1",
    "Q_NEW_SESSION": "1"
  },
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.gpuAcceleration": "off",
  "terminal.integrated.ignoreProcessNames": [
    "starship",
    "oh-my-posh",
    "bash",
    "zsh",
    "oh-my-zsh"
  ],
  "terminal.integrated.rightClickBehavior": "paste",
  "todohighlight.isEnable": true,
  "update.mode": "manual",
  "vscode_vibrancy.opacity": 0.4,
  "vsicons.dontShowNewVersionMessage": true,
  "window.commandCenter": false,
  "window.dialogStyle": "custom",
  "window.titleBarStyle": "custom",
  "workbench.activityBar.location": "top",
  "workbench.colorCustomizations": {
    "[Haki Neosolarized V3]": {
      "editor.lineHighlightBackground": "#2e344088",
      "editorCursor.foreground": "#94bfde",
      "editorGutter.addedBackground": "#ffffff00",
      "editorGutter.deletedBackground": "#ffffff00",
      "editorGutter.modifiedBackground": "#4f4e4e43",
      "editorLineNumber.activeForeground": "#a69e65",
      "editorLineNumber.foreground": "#4b4a4a",
      "gitDecoration.modifiedResourceForeground": "#7da6e5",
      "gitDecoration.untrackedResourceForeground": "#7da6e5",
      "list.errorForeground": "#ec5569",
      "list.warningForeground": "#ec5569",
      "scrollbarSlider.activeBackground": "#454b5615",
      "scrollbarSlider.background": "#454b5615",
      "scrollbarSlider.hoverBackground": "#454b5615"
    },
    "[Haki Neosolarized]": {
      "editorLineNumber.activeForeground": "#a69e65",
      "editorLineNumber.foreground": "#4b4a4a"
    },
    "[NeoSolarized Custom]": {
      "contrastActiveBorder": "#a69e651e",
      "editorLineNumber.activeForeground": "#a69e65",
      "editorLineNumber.foreground": "#4b4a4a"
    },
    "[NeoSolarized Theme]": {
      "editorGroup.border": "#68666628",
      "editorLineNumber.activeForeground": "#a69e65",
      "editorLineNumber.foreground": "#686666",
      "statusBar.border": "#a66d6d00",
      "tab.activeBorder": "#686666",
      "tab.border": "#686666"
    }
  },
  "workbench.colorTheme": "Catppuccin Mocha",
  "workbench.editor.customLabels.patterns": {
    "**/{index,index.module,page,page.module,layout,template,route,actions,hooks,components,utils,types}.{js,ts,jsx,tsx,md,mdx,css,scss}": "${dirname}/${filename}.${extname}"
  },
  "workbench.editor.tabSizingFixedMinWidth": 38,
  "workbench.iconTheme": "symbols",
  "workbench.settings.applyToAllProfiles": ["workbench.colorCustomizations"],
  "workbench.startupEditor": "none",
  "workbench.tree.indent": 15,
  "workbench.tree.renderIndentGuides": "always",
  "zenMode.centerLayout": false,
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false,
  "github.copilot.nextEditSuggestions.enabled": false,
  "workbench.editorAssociations": {
    "*.svg": "default"
  }
}
